name: cibuildwheel

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |-
            dist/*

      # - name: Build sdist
      #   run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        id: sdist
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: build_sdist
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [
            ubuntu-latest,
            # ubuntu-24.04-arm,
            windows-latest,
            macos-13,
            # macos-14,
            macos-latest,
          ]

    steps:
      # - uses: actions/checkout@v4
      #   with:
      #     submodules: "recursive"
      #     fetch-depth: 10

      # - name: Install uv
      #   uses: astral-sh/setup-uv@4db96194c378173c656ce18a155ffc14a9fc4355 # v5.2.2
      - name: Download sdist
        id: sdist
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
        with:
          name: cibw-sdist
          path: dist/
      - name: Display structure of downloaded files
        run: ls -R
      - name: Build wheels
        uses: pypa/cibuildwheel@ee63bf16da6cddfb925f542f2c7b59ad50e93969 # v2.22.0
        # env:
        #   CIBW_SOME_OPTION: value
        #    ...
        with:
          package-dir: ${{ steps.sdist.outputs.download-path}}
        #   package-dir: .
        #   output-dir: wheelhouse
        #   config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  # build_sdist:
  #   name: Build source distribution
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Build sdist
  #       run: pipx run build --sdist

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: cibw-sdist
  # #         path: dist/*.tar.gz

  # upload_pypi:
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   environment: pypi
  #   permissions:
  #     id-token: write
  #   if: github.event_name == 'release' && github.event.action == 'published'
  #   # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
  #   # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
  #   steps:
  #     - uses: actions/download-artifact@v4
  #       with:
  #         # unpacks all CIBW artifacts into dist/
  #         pattern: cibw-*
  #         path: dist
  #         merge-multiple: true

  #     - uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         # To test: repository-url: https://test.pypi.org/legacy/
